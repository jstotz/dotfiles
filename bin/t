#!/usr/bin/env bash

set -euo pipefail

sessions=$( (tmux list-sessions 2> /dev/null || true) | awk '{print "session: " $0}')
projects=$(yq eval-all -r '["project: " + .name] | .[]' ~/.config/tmuxinator/*.yml)
directories=$(zoxide query -l | sed "s|^$HOME|~|" | awk '{print "directory: " $0}')

options="new-session
$projects
$sessions
$directories"

function tmux-switch() {
  if [[ -z "${TMUX-}" ]]; then
    exec tmux attach-session -t "$1"
  else
    exec tmux switch-client -t "$1"
  fi
}

function tmux-create-and-switch() {
  new_session_name="$1"
  shift
  new_session_command=("tmux" "new-session" "-P" "-d")
  new_session_command+=("$@")
  if [[ -n "$new_session_name" ]]; then
    new_session_command+=("-t" "$new_session_name")
  fi
  tmux-switch "$("${new_session_command[@]}")"
}

selected=$(echo "$options" | sed "/^$/d" | fzf -q "$*" --reverse)
type=$(echo "$selected" | cut -d : -f 1  | xargs)
id=$(echo "$selected" | cut -d : -f 2  | xargs)

if [[ $type == "project" ]]; then
  exec tmuxinator start "$id"
elif [[ $type == "session" ]]; then
  tmux-switch "$id"
elif [[ $type == "directory" ]]; then
  tmux-create-and-switch "$(basename "$id")" -c "${id/#\~/$HOME}"
elif [[ $type == "new-session" ]]; then
  tmux-create-and-switch ""
fi
